@import "tailwindcss";

@plugin 'tailwindcss-animate';

@font-face {
  font-display: swap;
  font-family: "New Amsterdam";
  font-style: normal;
  font-weight: normal;
  src: url("/fonts/new-amsterdam-v1-latin-regular.woff2") format("woff2");
}

@custom-variant dark (&:is(.dark *));

@theme inline {
  --color-border: var(--border);
  --color-input: var(--input);
  --color-ring: var(--ring);
  --color-background: var(--background);
  --color-foreground: var(--foreground);

  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);

  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);

  --color-destructive: var(--destructive);
  --color-destructive-foreground: var(--destructive-foreground);

  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);

  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);

  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);

  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);

  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;

  --font-new-amsterdam: New Amsterdam, sans-serif;

  @keyframes accordion-down {
    from {
      height: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
    }
  }
  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }
    to {
      height: 0;
    }
  }
}

@utility container {
  margin-inline: auto;
  padding-inline: 2rem;
  @media (width >= --theme(--breakpoint-sm)) {
    max-width: none;
  }
  @media (width >= 1400px) {
    max-width: 1400px;
  }
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
/* @layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
} */

:root {
  --background: hsl(0, 0%, 100%);
  --foreground: hsl(240, 10%, 3.9%);
  --card: hsl(0, 0%, 100%);
  --card-foreground: hsl(240, 10%, 3.9%);
  --popover: hsl(0, 0%, 100%);
  --popover-foreground: hsl(240, 10%, 3.9%);
  --primary: hsl(142.1, 76.2%, 36.3%);
  --primary-foreground: hsl(355.7, 100%, 97.3%);
  --secondary: hsl(240, 4.8%, 95.9%);
  --secondary-foreground: hsl(240, 5.9%, 10%);
  --muted: hsl(240, 4.8%, 95.9%);
  --muted-foreground: hsl(240, 3.8%, 46.1%);
  --accent: hsl(240, 4.8%, 95.9%);
  --accent-foreground: hsl(240, 5.9%, 10%);
  --destructive: hsl(0, 84.2%, 60.2%);
  --destructive-foreground: hsl(0, 0%, 98%);
  --border: hsl(240, 5.9%, 90%);
  --input: hsl(240, 5.9%, 90%);
  --ring: hsl(142.1, 76.2%, 36.3%);
  --radius: 0.5rem;
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
}

.dark {
  --background: hsl(20, 14.3%, 4.1%);
  --foreground: hsl(0, 0%, 80%);
  --card: hsl(24, 9.8%, 10%);
  --card-foreground: hsl(0, 0%, 85%);
  --popover: hsl(0, 0%, 9%);
  --popover-foreground: hsl(0, 0%, 95%);
  --primary: hsl(142.1, 70.6%, 45.3%);
  --primary-foreground: hsl(144.9, 80.4%, 10%);
  --secondary: hsl(240, 3.7%, 15.9%);
  --secondary-foreground: hsl(0, 0%, 98%);
  --muted: hsl(0, 0%, 15%);
  --muted-foreground: hsl(240, 5%, 64.9%);
  --accent: hsl(12, 6.5%, 15.1%);
  --accent-foreground: hsl(0, 0%, 98%);
  --destructive: hsl(0, 62.8%, 30.6%);
  --destructive-foreground: hsl(0, 85.7%, 97.3%);
  --border: hsl(240, 3.7%, 15.9%);
  --input: hsl(240, 3.7%, 15.9%);
  --ring: hsl(142.4, 71.8%, 29.2%);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

@layer base {
  :root {
    --chart-1: oklch(0.646 0.222 41.116);
    --chart-2: oklch(0.6 0.118 184.704);
    --chart-3: oklch(0.398 0.07 227.392);
    --chart-4: oklch(0.828 0.189 84.429);
    --chart-5: oklch(0.769 0.188 70.08);
  }

  .dark {
    --chart-1: oklch(0.488 0.243 264.376);
    --chart-2: oklch(0.696 0.17 162.48);
    --chart-3: oklch(0.769 0.188 70.08);
    --chart-4: oklch(0.627 0.265 303.9);
    --chart-5: oklch(0.645 0.246 16.439);
  }
}

/* Sophisticated background pattern with depth */
.bg-depth-pattern {
  background-image: 
    /* Subtle noise texture */
    url("data:image/svg+xml,%3Csvg viewBox='0 0 250 250' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)' opacity='0.06'/%3E%3C/svg%3E"),
    /* Geometric dot pattern */
      radial-gradient(
        circle at 25% 25%,
        rgba(34, 197, 94, 0.08) 0%,
        transparent 50%
      ),
    radial-gradient(
      circle at 75% 75%,
      rgba(34, 197, 94, 0.06) 0%,
      transparent 50%
    ),
    /* Main depth gradient */
      linear-gradient(
        135deg,
        rgba(255, 255, 255, 1) 0%,
        rgba(248, 250, 252, 0.4) 35%,
        rgba(255, 255, 255, 1) 50%,
        rgba(241, 245, 249, 0.3) 65%,
        rgba(255, 255, 255, 1) 100%
      ),
    /* Subtle radial overlay */
      radial-gradient(
        ellipse at center top,
        rgba(34, 197, 94, 0.05) 0%,
        transparent 70%
      );

  background-size:
    250px 250px,
    800px 800px,
    1200px 1200px,
    100% 100%,
    100% 200%;

  background-position:
    0 0,
    -400px -400px,
    600px 600px,
    center,
    center top;
}

.dark .bg-depth-pattern {
  background-image: 
    /* Enhanced noise for dark mode */
    url("data:image/svg+xml,%3Csvg viewBox='0 0 250 250' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)' opacity='0.015'/%3E%3C/svg%3E"),
    /* Stronger geometric patterns for dark mode */
      radial-gradient(
        circle at 25% 25%,
        rgba(34, 197, 94, 0.02) 0%,
        transparent 60%
      ),
    radial-gradient(
      circle at 75% 75%,
      rgba(34, 197, 94, 0.015) 0%,
      transparent 60%
    ),
    /* Enhanced gradient for dark mode */
      linear-gradient(
        135deg,
        rgba(8, 7, 6, 1) 0%,
        rgba(28, 25, 23, 0.15) 25%,
        rgba(8, 7, 6, 1) 50%,
        rgba(41, 37, 36, 0.1) 75%,
        rgba(8, 7, 6, 1) 100%
      ),
    /* Additional depth layer */
      radial-gradient(
        ellipse at center,
        rgba(20, 20, 20, 0.015) 0%,
        transparent 80%
      );

  background-size:
    250px 250px,
    600px 600px,
    1000px 1000px,
    100% 100%,
    100% 150%;
}

.floating-element {
  transform: translateZ(0);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.floating-element:hover {
  transform: translateY(-2px) translateZ(0);
  box-shadow:
    0 10px 25px -3px hsl(var(--foreground) / 0.1),
    0 4px 6px -4px hsl(var(--foreground) / 0.1),
    inset 0 1px 0 0 hsl(var(--background) / 0.2);
}

.dark .floating-element:hover {
  box-shadow:
    0 10px 25px -3px hsl(0 0% 0% / 0.4),
    0 4px 6px -4px hsl(0 0% 0% / 0.3),
    inset 0 1px 0 0 hsl(var(--foreground) / 0.15);
}
